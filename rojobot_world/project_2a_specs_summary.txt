Name: RoJobot World, part deux a
Due: Demo Thursday, Nov. 8; Deliverables: Tuesday Nov.13  by 11:59PM
Team: Dung Le & Eric Krasue
-------------------------------------------------------------------------------
Intro:
-  RojoBot and its world are simulated in an HDL intellectual-property (IP)
   block called BotSim (bot.v).  
-  providing not-quite-working design example (Proj2Demo) to start with,
   create IP blocks: program second Picoblaze CPU, add additional 
   Verilog functions 
-  teams of two: Hw/SW
   + hardware design task: implement an interface between the PicoBlaze CPU, 
   BotSim, and the Nexys 3 buttons and switches and seven segment display. 
   + software design task: write, debug, and execute a PicoBlaze 
   assembly language program that causes the RojoBot to follow a black line defined 
   in the RojoBot’s virtual world until the RojoBot is stopped by a wall. 
-  deliverable : 2a + 2b part, theory docs, source code, demo
-------------------------------------------------------------------------------
Functional specs:   

Botsim (bot.v) (blackbox)
- input:  Motor Control Input (MotCtl_in) 
- output: Location X Register (LocX_reg)
          Location Y Register (LocY_reg)
		  Bot Information Register (BotInfo_reg) 
		  Sensors Register (Sensors_reg 
		  Left Motor Distance Counter (LMDist_reg) 
		  Right Motor Distance Counter (RMDist_reg)
		  “Update System Register” signal (upd_sysregs)

Adding HW/SW interface: 
- HW modules (nexys3_bot_if.v) 
	+ LED "controller"
	+ motor controller
	+ picoblaze interrupt logic
	+ seven-segment: robot current location / direction of movement and compass heading
	+ button auxiliary function if nescessary	
	+ SW[0](after debounce): control seven-segment display mode, SW[7-1]: auxiliary functions if nescessary	

- interfacing 
    + BotSim registers	
	+ seven segment display, SW, pushbuttons, LEDs 
	+ PicoBlaze cluster( kcpsm6 + prog_rom )
	
- picoblaze program: 
	+ read Botsim regs, SW, button
	+ drive motor controller
	+ drive seven-segment, led
	+ following black line algorithm
	
